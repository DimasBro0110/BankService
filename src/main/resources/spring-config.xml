<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://192.168.64.2:3306/BANK_SERVICE" />
        <property name="username" value="DIMA" />
        <property name="password" value="DIMA" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="hibernate.cfg.xml" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <tx:annotation-driven transaction-manager="txManager" />
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="userDAO" class="ru.dimas.brosalin.DAO_IMPL.UserDAOImpl_VER_2">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="accountDAO" class="ru.dimas.brosalin.DAO_IMPL.AccountDAOImpl_VER_2">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="walletDAO" class="ru.dimas.brosalin.DAO_IMPL.WalletDAOImpl_VER_2">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="transactionDAO" class="ru.dimas.brosalin.DAO_IMPL.TransactionDAOImpl_VER_2">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="legsToDAO" class="ru.dimas.brosalin.DAO_IMPL.LegsToDAOImpl_VER_2">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="legsFromDAO" class="ru.dimas.brosalin.DAO_IMPL.LegsFromDAOImpl_VER_2">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userService" class="ru.dimas.brosalin.ServiceImpl.UserServiceImpl">
        <property name="userDAOImpl2" ref="userDAO" />
    </bean>

    <bean id="accountService" class="ru.dimas.brosalin.ServiceImpl.AccountServiceImpl">
        <property name="accountDAOImplVer2" ref="accountDAO"/>
    </bean>

    <bean id="walletService" class="ru.dimas.brosalin.ServiceImpl.WalletServiceImpl">
        <property name="walletDAOImplVer2" ref="walletDAO"/>
    </bean>

    <bean id="transactionService" class="ru.dimas.brosalin.ServiceImpl.TransactionServiceImpl">
        <property name="transactionDAOImplVer2" ref="transactionDAO"/>
    </bean>

    <bean id="legsToService" class="ru.dimas.brosalin.ServiceImpl.LegsToServiceImpl">
        <property name="legsToDAOImplVer2" ref="legsToDAO"/>
    </bean>

    <bean id="legsFromService" class="ru.dimas.brosalin.ServiceImpl.LegsFromServiceImpl">
        <property name="legsFromDAOImplVer2" ref="legsFromDAO"/>
    </bean>

    <bean id="transferMoney" class="ru.dimas.brosalin.BusinessLogicBOImpl.TransferMoney">
        <property name="accountService" ref="accountService"/>
        <property name="legsFromService" ref="legsFromService"/>
        <property name="legsToService" ref="legsToService"/>
        <property name="transactionService" ref="transactionService"/>
        <property name="walletService" ref="walletService"/>
        <property name="legsFrom" ref="legsFromModel"/>
        <property name="legsTo" ref="legsToModel"/>
        <property name="transaction" ref="transactionModel"/>
    </bean>

    <bean id="userCreationInSystem" class="ru.dimas.brosalin.BusinessLogicBOImpl.UserCreationInSystem">
        <property name="user" ref="userModel"/>
        <property name="account" ref="accountModel"/>
        <property name="wallet" ref="walletModel"/>
        <property name="accountService" ref="accountService"/>
        <property name="walletService" ref="walletService"/>
        <property name="userService" ref="userService"/>
    </bean>

    <bean id="phoneNotification" class="ru.dimas.brosalin.Notification.SendMessageByPhoneNumber">
        <constructor-arg value="AC0890d1483d395bd41a9a2150421241ee"/>
        <constructor-arg value="b44d4a7ef7ecbb905a97589016db6b94"/>
        <constructor-arg value="+16699001417"/>
    </bean>

    <bean id="connectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
        <property name="host" value=""/>
        <property name="port" value="123"/>
        <property name="username" value=""/>
        <property name="password" value=""/>
    </bean>

    <bean id="messageListener" class="ru.dimas.brosalin.RabbitMQ.RabbitMQListener">
        <property name="transferMoney" ref="transferMoney"/>
        <property name="userCreationInSystem" ref="userCreationInSystem"/>
        <property name="user" ref="userModel"/>
        <property name="userService" ref="userService"/>
    </bean>

    <rabbit:queue id="queueUserAdministration" exclusive="true" name="userTasks"/>
    <rabbit:queue id="queueUserFinanceActions" exclusive="true" name="financeTasks"/>

    <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory"/>

    <rabbit:listener-container connection-factory="connectionFactory">
        <rabbit:listener queues="queueUserAdministration" ref="messageListener" method="onMessage"/>
        <rabbit:listener queues="queueUserFinanceActions" ref="messageListener" method="onMessage"/>
    </rabbit:listener-container>

    <bean id="userModel" class="ru.dimas.brosalin.Models.User"/>
    <bean id="accountModel" class="ru.dimas.brosalin.Models.Account"/>
    <bean id="walletModel" class="ru.dimas.brosalin.Models.Wallet"/>
    <bean id="transactionModel" class="ru.dimas.brosalin.Models.Transaction"/>
    <bean id="yandexMailGun" class="ru.dimas.brosalin.Notification.SendMessageFromYandexAccount"/>
    <bean id="legsToModel" class="ru.dimas.brosalin.Models.LegsTo"/>
    <bean id="legsFromModel" class="ru.dimas.brosalin.Models.LegsFrom"/>

    <bean id="loggerBean" class="ru.dimas.brosalin.Aspects.LoggerInfoAspect"/>
    <bean id="notificationBean" class="ru.dimas.brosalin.Aspects.UserNotificationAspect"/>

    <aop:aspectj-autoproxy/>
    <aop:config proxy-target-class="true">
        <aop:aspect ref="loggerBean">
            <aop:pointcut id="performLogging" expression="execution (* ru.dimas.brosalin.DAO.ModelDAOGlobal.save(..))"/>
            <aop:before method="beforeSave" pointcut-ref="performLogging"/>
            <aop:after method="afterSave" pointcut-ref="performLogging"/>
        </aop:aspect>
        <aop:aspect ref="notificationBean">
            <aop:pointcut id="performNotification" expression="execution (* ru.dimas.brosalin.DAO_IMPL.UserDAOImpl_VER_2.save(..))"/>
            <aop:around method="InformUser" pointcut-ref="performNotification"/>
        </aop:aspect>
    </aop:config>

</beans>